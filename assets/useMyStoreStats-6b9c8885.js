import{ax as l,ay as c,ap as u,v as d}from"./index-ff671c6d.js";const h=l("myMyStoreStats",{state:()=>({mystoreStats:{},loading:!0,currentPage:1,mode:"openCardCount",period:"2W",allDataLoaded:!1,statsFilter:!1}),getters:{chartTitle:t=>{let a;switch(t.mode){case"openCardCount":a="Открытия";break;case"addToCartCount":a="Корзины";break;case"ordersCount":a="Покупки";break;default:a="Метрика"}return`${a} / ${t.period.replace("W","Н")}`}},actions:{updateMode(t){this.mode=t},updatePeriod(t){this.period=t},async GetMyStoreStatistics(t,a,e){var o;const r=c();this.loading=!0;const n={data:{store_id:t,page:a,limit:e},user_id:r.user.id,user_tg:r.user.user_tg};try{const s=await u.post("/mystore_stats",{payload:n});if(s.data.status!=="ok"||!Array.isArray(s.data.payload.cards_stats))throw new Error(((o=s.data)==null?void 0:o.status)||"Некорректные данные получены от сервера");const i=s.data.payload.cards_stats;return this.mystoreStats[t]||(this.mystoreStats[t]={cards_stats:[]}),this.mystoreStats[t].cards_stats=[...this.mystoreStats[t].cards_stats,...i],console.log("Статистика магазина подгружена!"),d({type:"info",message:"Статистика магазина загружена успешно"}),i.length<e?this.allDataLoaded=!0:this.allDataLoaded||await this.GetMyStoreStatistics(t,a+1,e),this.loading=!1,s}catch(s){throw console.error("Ошибка получения статистики:",s),d({type:"error",message:"Произошла ошибка при загрузке статистики"}),this.loading=!1,s}}}});export{h as u};
