import{aC as u,ax as c,ay as l,ap as i}from"./index-ff671c6d.js";u();const m=c("myPartnerStore",{state:()=>({partnerstores:[],multipleSelection:[],loading:!0,selectedSupplier:null}),actions:{async GetMyPartnerStores(r,n){const a=l(),e={data:{page:r,limit:n},user_id:a.user.id,user_tg:a.user.user_tg};return new Promise((t,s)=>{i.post("/mypartnerstores",{payload:e}).then(o=>{this.partnerstores=o.data.payload,t(o)}).catch(o=>{console.error("Error get mypartnerstores:",o),s(o)})})},async DeleteAllMyPartnerStores(r){const n=l();return r={data:"deleteallmypartnerstores",user_id:n.user.id,user_tg:n.user.user_tg},new Promise((a,e)=>{i.post("/deleteallmypartnerstores",{payload:r}).then(t=>{t.data.status=="ok"&&(this.partnerstores=[]),a(t)}).catch(t=>{console.error("Error delete all myLogs:",t),e(t)})})},async DeleteSelectedMyPartnerStores(r){let n=r.filter(e=>e.id).map(e=>e.id);const a=l();return r={data:n,user_id:a.user.id,user_tg:a.user.user_tg},new Promise((e,t)=>{i.post("/deleteselectedmypartnerstores",{payload:r}).then(s=>{if(s.data.status=="ok"){let o=s.data.payload;this.partnerstores=this.partnerstores.filter(d=>!o.includes(d.id))}e(s)}).catch(s=>{console.error("Error delete all myLogs:",s),t(s)})})}}});export{m as u};
